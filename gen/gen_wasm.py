#!/usr/bin/env python
import re
import sys
import os

# this file is responsible for generating the JS file that includes the encoded
# wasm and JS definitions and imports.

def chunks(l, n):
    for i in range(0, len(l), n):
        yield l[i:i + n]

wbg_pat = re.compile(r'__wbg_[a-zA-Z0-9_]*')

native_js_gen = '''/// Autogenerated WASM include file
var source = new Uint8Array([
'''

# write encoded wasm
with open(os.path.join(sys.argv[1], 'native/pkg/native_bg.wasm')) as fd:
    data = fd.read()
    enc_bytes = ['0x{:02x}'.format(ord(c)) for c in data]
    enc = ',\n'.join(['    ' + ', '.join(l) for l in chunks(enc_bytes, 12)])

    native_js_gen += enc
    native_js_gen += "\n]);\n"

# import TextEncoder polyfill
# doesn't work for me, gets 'TextEncoder is not defined' error
# with open('gen/text_encoder_polyfill.js') as fd:
#     native_js_gen += fd.read() + '\n'

# import the pkg/native.js without the first import
with open(os.path.join(sys.argv[1], 'native/pkg/native.js')) as fd:
    text = fd.read()
    wbg_funcs = re.findall(wbg_pat, text)
    native_js_gen += '\n'.join(text.split('\n')[2:]) + '\n'

    native_js_gen += 'var wasmImports = {"./native": {\n'
    native_js_gen += ',\n'.join(['    "{0}": {0}'.format(f) for f in wbg_funcs])
    native_js_gen += '\n} };\n'

native_js_gen += 'var wasmModule = new WebAssembly.Module(source);\n'
native_js_gen += 'var wasm = new WebAssembly.Instance(wasmModule, wasmImports).exports;\n'

with open(os.path.join(sys.argv[1], 'native.js'), 'w') as fd:
    fd.write(native_js_gen)